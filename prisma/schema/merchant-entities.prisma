model MerchantDetails {
  id                   Int                        @id @default(autoincrement())
  isMerchantBlocked    Boolean                    @default(false)
  registrationStatus   MerchantRegistrationStatus @default(review_by_admin)
  user                 User                       @relation(fields: [userId], references: [id])
  userId               Int                        @unique
  latitude             Decimal
  longtitude           Decimal
  addressLine1         String
  addressLine2         String
  pinCode              Int
  bankAcNo             String
  gstIn                String
  panCard              String
  photo                String
  cloudinary_public_id String
  name                 String
  description          String
  createdAt            DateTime                   @default(now())
  updatedAt            DateTime                   @updatedAt
  archive              Boolean                    @default(false)
}

model ProductPhoto {
  id                   Int      @id @default(autoincrement())
  url                  String
  cloudinary_public_id String
  photos               Product? @relation("Photos", fields: [photoId], references: [id])
  photoId              Int?
  thumbnail            Product? @relation("Thumbnail", fields: [thumbnailId], references: [id])
  thumbnailId          Int?     @unique
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  archive              Boolean  @default(false)
}

model Product {
  id             Int                @id @default(autoincrement())
  name           String
  price          Float
  photos         ProductPhoto[]     @relation("Photos")
  thumbNail      ProductPhoto?      @relation("Thumbnail")
  description    String
  rating         Float              @default(0)
  totalReviewers Int                @default(0)
  totalRatings   Int                @default(0)
  item           Item               @relation(fields: [itemId], references: [id])
  itemId         Int
  filterOptions  ItemFilterOption[]
  user           User               @relation(fields: [merchant], references: [id])
  merchant       Int
  orderItem      OrderItem[]
  available      Boolean            @default(true)
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
  archive        Boolean            @default(false)
}
